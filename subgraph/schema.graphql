type Pool @entity {
  id: ID!
  poolAddress: Bytes!
  token: Bytes!
  name: String!
  symbol: String!
  metadata: String!
  adminRole: Bytes!
  poolMetadataUpdatedEvents: [PoolMetadataUpdatedEvent!]! @derivedFrom(field: "pool")
  poolAdminAddedEvents: [PoolAdminAddedEvent!]! @derivedFrom(field: "pool")
  poolAdminRemovedEvents: [PoolAdminRemovedEvent!]! @derivedFrom(field: "pool")
  poolAdmins: [PoolAdmin!]! @derivedFrom(field: "pool")
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
}

type PoolAdmin @entity {
  id: ID!
  address: Bytes!
  adminRole: Bytes!
  pool: Pool!
  createdAtBlock: BigInt!
  createdAtTimestamp: BigInt!
}

type PoolMetadataUpdatedEvent @entity {
  id: ID!
  metadata: String!
  pool: Pool!
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type PoolAdminAddedEvent @entity {
  id: ID!
  address: Bytes!
  adminRole: Bytes!
  pool: Pool!
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}

type PoolAdminRemovedEvent @entity {
  id: ID!
  address: Bytes!
  adminRole: Bytes!
  pool: Pool!
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
}
